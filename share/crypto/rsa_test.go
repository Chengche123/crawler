package crypto

import (
	"testing"
)

const cipher = `
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
`

func TestDecryptComicDetail(t *testing.T) {
	_, err := Decrypt(cipher)
	if err != nil {
		t.Log(err)
		return
	}

}
