package crypto

import (
	"testing"
)

const cipher = `
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
`

func TestDecryptComicDetail(t *testing.T) {
	_, err := Decrypt(cipher)
	if err != nil {
		t.Log(err)
		return
	}

}
